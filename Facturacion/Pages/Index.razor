@page "/"
@using Facturacion.Data.Models
@using Facturacion.Data.Service
@using Microsoft.AspNetCore.Mvc

@inject ClientService ClientService
@inject TiposFiscalService TiposFiscalService

<PageTitle>Facturacion</PageTitle>

<div class="body-form">
    <div class="form-container">
        <div class="title">Facturación</div>
        <EditForm Model="@FacturaD" OnValidSubmit="@HandleValidConfirm">
            <DataAnnotationsValidator />
            <div class="user-details">
                <div class="box">
                    <div class="input-box">
                        <span class="details"> Cliente </span>
                        <!--filled by db-->
                        <input type="number" list="idCliente" @bind="@IdCliente" @onfocusout="() => GetClientName()" />
                        <datalist id="idCliente">
                            @if (listaCliente != null)
                            {
                                foreach (Cliente cliente in listaCliente)
                                {
                                    <option value="@cliente.IdCliente">@cliente.Nombre</option>
                                }
                            }
                        </datalist>
                    </div>
                    <div class="input-box">
                        <span class="details">Nombre del cliente</span>
                        <!--filled by the current client-->
                        @if (IdCliente == 0)
                        {
                            Nombre = "Consumidor Final";
                            <input type="text" @bind="@Nombre" />
                        }
                        else
                        {
                            <input disabled type="text" @bind="@Nombre" />
                        }
                    </div>
                    <div class="input-box">
                        <span class="details"> Tipo de Comprobante </span>
                        <select @bind="@TipoFiscal">
                            @if (listaTipoFactura != null)
                            {
                                foreach (TiposFiscal fiscal in listaTipoFactura)
                                {
                                    <option value="@fiscal.IdTipoFiscal">@fiscal.TipoFiscal</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="input-box">
                        <span class="details"> Secuencia Fiscal </span>
                        <input type="text" @bind="@SecFiscal" />
                    </div>
                </div>
                <div class="box">
                    <div class="input-box">
                        <span class="details"> Fecha factura </span>
                        @{
                            string min = string.Format("{0}-{1}-{2}", DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
                        }
                        <input class="input-date" type="date" min="@min" @bind="@FechaGenerada" />
                    </div>
                    <div class="input-box">
                        <span class="details"> Moneda </span>
                        <select @bind="@IdMoneda">
                            <option value="1" selected>DOP</option>
                            <option value="2">USD</option>
                        </select>
                    </div>
                    @if (TipoFiscal == 2)
                    {
                        <div class="input-box">
                            <span class="details"> Metodo de Pago </span>
                            <select>
                                <option value="1" selected>Efectivo</option>
                                <option value="2">Tarjeta</option>
                            </select>
                        </div>
                    }
                    @if (TipoFiscal == 1 || TipoFiscal == 4 || TipoFiscal == 5 || TipoFiscal == 6)
                    {
                        <div class="input-box">
                            <span class="details"> Dias credito </span>
                            <select @bind="@IdDiasCredito">
                                <option value="1" selected>30 Dias</option>
                                <option value="2">60 Dias</option>
                                <option value="3">90 Dias</option>
                                <option value="4">120 Dias</option>
                            </select>
                        </div>
                    }
                </div>
            </div>
            <div class="facturables">
                <table>
                    <thead>
                        <tr role="row" class="unselectable th-index-style">
                            <th rowspan="1" colspan="1"> ID</th>
                            <th rowspan="1" colspan="1"> Descripción</th>
                            <th rowspan="1" colspan="1"> Precio</th>
                            <th rowspan="1" colspan="1"> Cantidad</th>
                            <th rowspan="1" colspan="1"> Monto</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>sdas</td>
                            <td>TEST</td>
                            <td>TEST</td>
                            <td>TEST</td>
                            <td>TEST</td>
                        </tr>
                    </tbody>
                </table>
                <div class="box-result">
                    <span>Total:</span>
                    <span class="precio">1,000</span>
                </div>
            </div>
            <hr />
            <div class="button">
                <button type="submit">Confirmar</button>
            </div>
        </EditForm>
    </div>
</div>
@code {
    [BindProperty]
    public short? IdCliente { get; set; } = null!;
    [BindProperty]
    public string Nombre { get; set; } = "";
    [BindProperty]
    public byte? IdMoneda { get; set; } = null!;
    [BindProperty]
    public DateTime FechaGenerada { get; set; } = DateTime.Now;
    [BindProperty]
    public byte? TipoFiscal { get; set; } = null!;
    [BindProperty]
    public string SecFiscal { get; set; } = "";
    [BindProperty]
    public byte? IdDiasCredito { get; set; } = null!;

    public List<Cliente>? listaCliente { get; set; } = null!;
    public List<TiposFiscal>? listaTipoFactura { get; set; } = null!;
    public FacturasD? FacturaD { get; set; } = new();

    public void HandleValidConfirm()
    {
        // TODO: Facturar
    }

    protected override async Task OnInitializedAsync()
    {
        listaCliente = await ClientService.GetAllClientAsync();
        listaTipoFactura = await TiposFiscalService.GetAllTiposFiscalsAsync();
    }

    public Task GetClientName()
    {
        if (IdCliente > 0 && listaCliente != null && listaCliente.ElementAtOrDefault((int)IdCliente) != null)
        {
            Nombre = listaCliente[(int)IdCliente - 1].Nombre;
        }
        return Task.CompletedTask;
    }
}